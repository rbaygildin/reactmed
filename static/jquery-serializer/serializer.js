!function(e,i){if("function"==typeof define&&define.amd)define(["exports","jquery"],function(e,r){return i(e,r)});else if("undefined"!=typeof exports){var r=require("jquery");i(exports,r)}else i(e,e.jQuery||e.Zepto||e.ender||e.$)}(this,function(e,i){function r(e,r){function n(e,i,r){return e[i]=r,e}function a(e,i){for(var r,a=e.match(t.key);void 0!==(r=a.pop());)t.push.test(r)?i=n([],s(e.replace(/\[]$/,"")),i):t.fixed.test(r)?i=n([],r,i):t.named.test(r)&&(i=n({},r,i));return i}function s(e){return void 0===d[e]&&(d[e]=0),d[e]++}function u(e){switch(i('[name="'+e.name+'"]',r).attr("type")){case"checkbox":return"on"===e.value||e.value;default:return e.value}}function f(){return o}var o={},d={};this.addPair=function(i){if(!t.validate.test(i.name))return this;var r=a(i.name,u(i));return o=e.extend(!0,o,r),this},this.addPairs=function(i){if(!e.isArray(i))throw new Error("formSerializer.addPairs expects an Array");for(var r=0,t=i.length;r<t;r++)this.addPair(i[r]);return this},this.serialize=f,this.serializeJSON=function(){return JSON.stringify(f())}}var t={validate:/^[a-zA-Zа-яА-Я_][a-zA-Zа-яА-Я0-9_\s]*(?:\[(?:\d*|[a-zA-Zа-яА-Я0-9_\s]+)])*$/i,key:/[a-zA-Zа-яА-Я0-9_\s]+|(?=\[])/gi,push:/^$/,fixed:/^\d+$/,named:/^[a-zA-Zа-яА-Я0-9_\s]+$/i};return r.patterns=t,r.serializeObject=function(){return new r(i,this).addPairs(this.serializeArray()).serialize()},r.serializeJSON=function(){return new r(i,this).addPairs(this.serializeArray()).serializeJSON()},void 0!==i.fn&&(i.fn.serializeObject=r.serializeObject,i.fn.serializeJSON=r.serializeJSON),e.FormSerializer=r,r});